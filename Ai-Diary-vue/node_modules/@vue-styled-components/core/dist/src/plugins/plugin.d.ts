import { Element } from 'stylis';
type beforeBuildCallback = (element: Element, index: number, children: Element[]) => string | void;
type afterBuildCallback = (compiledCss: string) => string | void;
interface PluginHooks {
    beforeBuild?: beforeBuildCallback | beforeBuildCallback[];
    afterBuild?: afterBuildCallback | afterBuildCallback[];
}
declare class Plugin {
    private beforeBuildHooks;
    private afterBuildHooks;
    register(plugin: PluginHooks): void;
    runBeforeBuild(element: Element, index: number, children: Element[]): void;
    runAfterBuild(compiledCss: string): string;
}
export type { Element };
export declare const plugin: Plugin;
